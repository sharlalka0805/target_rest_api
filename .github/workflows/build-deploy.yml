on:
  push:
    branches:
      - main

name: Build and Deploy a Container
env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT }}
  SERVICE: target-rest-api
  REGION: us-central1

jobs:
  test:
    name: Unit-Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Maven Package
        run: mvn -B clean package
      - name: Maven Verify
        run: mvn -B clean verify -DskipTests
  deploy:
    name: Publish Docker Image
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Cloud SDK
      uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        project_id: ${{ env.PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true

    - name: Authorize Docker push
      run: gcloud auth configure-docker

    - name: Build and Push Container
      run: |-
        docker build -t gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }} .
        docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }}

    - name: Deploy to Cloud Run
      id: deploy
      uses: google-github-actions/deploy-cloudrun@v0.4.0
      with:
        service: ${{ env.SERVICE }}
        image: gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }}
        region: ${{ env.REGION }}
        env_vars: PG_SSLROOTCERT=${{ secrets.PG_SSLROOTCERT }},PG_SSLCERT=${{ secrets.PG_SSLCERT }},PG_SSLKEY=${{ secrets.PG_SSLKEY }},PG_HOST=${{ secrets.PG_HOST }},PG_PASSWORD=${{ secrets.PG_PASSWORD }},STORAGE_BUCKET=${{ secrets.STORAGE_BUCKET }},GCS_CREDS=${{ secrets.GCS_CREDS }}

    - name: Show Output
      run: echo ${{ steps.deploy.outputs.url }}
